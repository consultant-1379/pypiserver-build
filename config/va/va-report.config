model_version: 3.0
product_va_config:
  name: Python Package Repository 1.1.0
  product_name: eric-lcm-package-repository-py
  version: 1.1.0
  description: Python Package Repository Service with Bob based CI and release automation
  product_purpose: The purpose of the product is given in VA Config field product_va_config.product_purpose. This is specific to the product version.
  test_nature: The nature of the performed tests is given in VA Config field product_va_config.test_nature. This is specific to the product version.
  issue_trackers:
  # The `default` key is looked up if no hint provided on what tracker
  # should be used.  This is not added automatically, one has to provide
  # this explicitly with VA Config field product_va_config.issue_trackers.default 
  # - these values are the same for all versions of the product.
    default: "https://eteamproject.internal.ericsson.com/browse/"
  # Further entries might be added with their own identifiers.
    PC15: "https://pdupc-jira.internal.ericsson.com/servicedesk/customer/portal/15/"
  spoc: "The names of \n
          - Product Owner \n
          - Security Master  \n
         are given in VA Config field product_va_config.spoc. The names are the same for all versions of the product."
  test_responsibles: The names or groups responsible of the testing are given in VA Config field product_va_config.test_responsibles. \n
                      Test responsibles are the same for all versions of the product.
  security_test_scope: Scope of the security tests described in the report 
  excluded_from_scope: Description of the parts in the product that have been excluded from the security test scope 
  formal_va_scope: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  hardened_reference_system: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  updated_tools_and_plugins: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  run_port_scan: Compliant/Not Compliant/Partly Compliant/Not Applicable
  run_vulnerability_scan: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  run_configuration_scan: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  perform_basic_fuzz_test: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  perform_advanced_fuzz_test: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  perform_dos_test: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  perform_edge_boundary_value_condition_test: Compliant/Not Compliant/Partly Compliant/Not Applicable
  perform_owasp_top_ten_scan: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  perform_ad_hoc_manual_test: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  report_findings_as_trs: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  perform_structured_manual_penetration_test:  Compliant/Not Compliant/Partly Compliant/Not Applicable
  perform_extended_risk_assessment_test: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  perform_red_team_penetration_test: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  verify_security_design_rules: Compliant/Not Compliant/Partly Compliant/Not Applicable 
  continuous_vulnerability_test: Compliant/Not Compliant/Partly Compliant/Not Applicable
  maintain_false_positive_record: Compliant/Not Compliant/Partly Compliant/Not Applicable
  explanations_for_tools_not_scanned:
    nmap: Explanation for Nmap scanning not having been done 
    nessus: Explanation for Nessus (a.k.a. Tenable.sc) scanning not having been done
    kubeaudit: Explanation for Kubeaudit scanning not having been done 
  additional_zap_information: More detailed explanation of the performed Zap scan 
  release_notes_for_st_report: Release notes summary and/or reference link to [release notes explaining the changes and mitigated vulnerabilities in this version](http://ericsson.com/product/version/external/releasenotes.html) to be added to ST Report for external purposes (given in VA Config field product_va_config.release_notes_for_st_report)
  security_posture: Description of the security posture can be given in VA Config field product_va_config.security_posture.
                    Security posture description is specific to product version. 
  residual_risk: Description of the residual risks can be given in VA Config field product_va_config.residual_risk.
                 Residual risk description is specific to product version.
  references: "List of used references in VA Report can be given in VA Config field product_va_config.references, for example, as follows:  \n
               <a id=\"docref1\">[1]</a> Common Vulnerability Scoring System v3.1 Specification Document, [https://www.first.org/cvss/](https://www.first.org/cvss/)   \n
               Note that currently the list of references in ST Report is hardcoded (following the ST Report template) and _can not be amended_ by VA Config. \n
               Note also that any given value containing colon (as in the https link above) must be quoted in the VA Config file"
  additional_tool_information:
    anchore: 6.6.6, image version 10.1.553
    defensics: "1.1"
    hadolint: any additional tool-related info beyond version can be added here
    kubeaudit: 1.0.0 
    kubesec: v8 
    nessus: 4.5.6 
    nmap: 7.7.7 
    trivy: v111.10-98b 
    xray: 7.7.7 
    zap: 1.2.3-33 
  show_required_manual_action_warnings: true

  mitigations:
    CVE-2023-39325:
      evaluation:
        cvss_vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H      
      category: PEE_NA
      severity_based_on_risk_assessment: NONE
      description_of_usage:  CVE-2023-39325 is reported in eric-lcm-package-repository-py image of pypi. This CVE is originated in the path "/usr/local/bin/stdout-redirect/stdlib-go1". As per CVE description attacker could create many hung HTTPS connection to cause a denial of service (DoS). This library is internally used by stdout-redirect for log writing. No HTTP requests/services are involved. Hence, it is marked as not appliciable.
                This CVE is reported in the services eric-lcm-package-repository-py . This is reported in the path "/usr/local/bin/stdout-redirect/stdlib-go1".As per CVEdescription a "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption." This failure mode could be exploited to cause a denial of service. 
                Stdout Redirect is a software library which captures the logs and writes the logs to log files and/or console. It is built with pre-compiled Go binary and package as a tar.gz file. stdout-redirect will be part of this service deployment only if logshipper is integrated.nnIn pypi, the library "stdlib-go1" is internally used by log shipper to write the logs, whereas this CVE is primarly describing about the HTTP/2 resource consumption.
                As no HTTP requests are involved in this pypi service, it cannot be invoked. Hence, we are marking it as "Not appliciable".
      likelihood_of_attack:  None
      impact: pypi is not impacted as vulnerable functions are not used. However all the above mentioned services are protected by Resource Quota (CPU/memory limits) to prevent from hogging memory and CPU. "
      mitigation: Updated version has yet to be provided by 3PP. And also no specific mitigation required for it since the application doesn't have any impact for the the given CVE. The plan is to uplift once the fix is available from 3PP.
      sce:
        sce-id: 
        status: Approved 
        expires: 2024-08-31
        planned_fix: 1.2.0
        expiry_date_explanation: 
        original-sce-id: SCED-2023-101632
    CVE-2023-39323:
      evaluation:
        cvss_vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H      
      category: PEE_NA
      severity_based_on_risk_assessment: NONE
      description_of_usage:  CVE-2023-39323 is reported in eric-lcm-package-repository-py image of pypi. This CVE is originated in the path "usr/local/bin/stdout-redirect/github.com/golang/go". As per CVE description attacker could perform unexpected execution of arbitrary code when running "go build". This library is internally used by stdout-redirect for log writing and does not support execution of go related commands. Hence, it is marked as not appliciable.
                This CVE is reported in the services eric-lcm-package-repository-py. This is reported in the path "usr/local/bin/stdout-redirect/github.com/golang/go"
                As per CVE description a "Line directives ("//line") can be used to bypass the restrictions on "//go:cgo_" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running "go build". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex."
                Stdout Redirect is a software library which captures the logs and writes the logs to log files and/or console. It is built with pre-compiled Go binary and package as a tar.gz file. stdout-redirect will be part of this service deployment only if logshipper is integrated.nnIn pypi,the library "usr/local/bin/stdout-redirect/github.com/golang/go" is internally used by log shipper to write the logs, whereas this CVE is primarly describing about the artibary command execution by compiling the code at runtime using "go build" command.
                As no support of go command execution, it cannot be invoked. Hence, we are marking it as "Not appliciable"
      likelihood_of_attack:  None
      impact: pypi is not impacted as vulnerable functions are not used
      mitigation: Updated version has yet to be provided by 3PP. And also no specific mitigation required for it since the application doesn't have any impact for the the given CVE. The plan is to uplift once the fix is available from 3PP.
      sce:
        sce-id: 
        status: Approved 
        expires: 2024-08-31
        planned_fix: 1.2.0
        expiry_date_explanation: 
        original-sce-id: SCED-2023-101632
    CVE-2023-44487:
      evaluation:
        cvss_vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H      
      category: PEE_NA
      severity_based_on_risk_assessment: NONE
      description_of_usage:  CVE-2023-44487 is reported in eric-lcm-package-repository-py image of pypi. This CVE is originated in the path "/usr/local/bin/stdout-redirect/stdlib-go1". This CVE could leads to denial of service (DoS). This library is internally used by stdout-redirect for log writing. No HTTP requests/services are involved. Hence, it is marked as not appliciable.
                This CVE is reported in the services eric-lcm-package-repository-py. This is reported in the path "/usr/local/bin/stdout-redirect/stdlib-go1".
                As per CVE description a "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023."
                Stdout Redirect is a software library which captures the logs and writes the logs to log files and/or console. It is built with pre-compiled Go binary and package as a tar.gz file. stdout-redirect will be part of this service deployment only if logshipper is integrated.
                In pypi, the library "stdlib-go1" is internally used by log shipper to write the logs, whereas this CVE is primarly describing about the HTTP/2 resource consumption. As no HTTP requests are involved in this pypi service, it cannot be invoked. Hence, we are marking it as "Not appliciable"
      likelihood_of_attack:  Considered as Low
      impact: pypi is not impacted as vulnerable functions are not used. However all the above mentioned services are protected by Resource Quota (CPU/memory limits) to prevent from hogging memory and CPU.
      mitigation: Updated version has yet to be provided by 3PP. And also no specific mitigation required for it since the application doesn't have any impact for the the given CVE. The plan is to uplift once the fix is available from 3PP.
      sce:
        sce-id: 
        status: Approved 
        expires: 2024-08-31
        planned_fix: 1.2.0
        expiry_date_explanation: 
        original-sce-id: SCED-2023-101632
    CVE-2023-45283:
      evaluation:
        cvss_vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N      
      category: PEE_FP
      severity_based_on_risk_assessment: NONE
      description_of_usage:  As per CVE description this vulnerability is reported exclusively for Windows based environments. ML pipeline runs exclusively in Linux Environements and is not affected by this vulnerability.
      likelihood_of_attack:  NONE
      impact: No impact. False positive
      mitigation: No Mitigation plan required as ML Pypi runs only on Linux Environment.
      sce:
        sce-id: 
        status: Approved 
        expires: 2024-08-31
        planned_fix: 1.2.0
        expiry_date_explanation: 
        original-sce-id: SCED-2023-101632
    CVE-2018-20225:
      evaluation:
        cvss_vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H    
      category: PEE_NA
      severity_based_on_risk_assessment: NONE
      description_of_usage:  CVE-2018-20225 is reported in eric-lcm-package-repository-py in the package "pip". As per the CVE all versions of pip are vulnerable when --extra-index-url is set; as pip installs the highest version available (which could be from Pypi.org) even if the user had intended to obtain a private package from a private index. This is the intended behavior of PIP. It is recommended to use this command cautiously by the end user. As per community, this behavior is not considered as security vulnerability.Hence, marked it as not appliciable.
                This CVE is detected in pip used in eric-lcm-package-repository-py.
                As per CVE description "A flaw was found in python-pip. The software installs the version withthe highest version number, even if the user had intended to obtain a private package from a private index. This only affects use of the --extra-index-url option, and exploitation requires that the package does not already exist in the public index (and thus the attacker can put the package there with an arbitrary version number)."
                As per community, this behavior is not considered as security vulnerability and this is intended behavior of pip when using the --extra-index-url flag. Hence, marked it as not appliciable.
      likelihood_of_attack:  NONE
      impact: No impact. False positive
      mitigation: No Mitigation plan required as ML pipleline runs only on Linux Environment.
      sce:
        sce-id: 
        status: Approved 
        expires: 2024-08-31
        planned_fix: 1.2.0
        expiry_date_explanation: 
        original-sce-id: SCED-2023-101632
    